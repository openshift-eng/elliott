// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
	"name": "Elliott dev container",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "./dev.Dockerfile",

	// The optional 'runArgs' property can be used to specify additional runtime arguments.
	"runArgs": [
		// Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker for details.
		// "-v","/var/run/docker.sock:/var/run/docker.sock",

		// Uncomment the next line if you will be using a ptrace-based debugger like C++, Go, and Rust.
		// "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"

		// You may want to add a non-root user to your Dockerfile. On Linux, this will prevent
		// new files getting created as root. See https://aka.ms/vscode-remote/containers/non-root-user
		// for the needed Dockerfile updates and then uncomment the next line.
		"-u", "dev",

		// Mount config files and SSH keys into dev container
		"-v", "${localWorkspaceFolder}/.devcontainer/settings.yaml:/home/dev/.config/elliott/settings.yaml:ro",
		"-v", "${localWorkspaceFolder}/.devcontainer/krb5-redhat.conf:/etc/krb5.conf.d/krb5-redhat.conf:ro",
		"-v", "${localWorkspaceFolder}/.devcontainer/brewkoji.conf:/etc/koji.conf.d/brewkoji.conf:ro",
		"-v", "${env:HOME}${env:USERPROFILE}/.ssh:/home/dev/.ssh:ro",
		"-v", "dev-elliott-working-dir:/workspaces/elliott-working-dir"
	],

	// Use 'settings' to set *default* container specific settings.json values on container create.
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": {
		// This will ignore your local shell user setting for Linux since shells like zsh are typically
		// not in base container images. You can also update this to an specific shell to ensure VS Code
		// uses the right one for terminals and tasks. For example, /bin/bash (or /bin/ash for Alpine).
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/bin/python",
		"python.linting.pylintEnabled": true,
		"python.linting.pylintPath": "/usr/bin/pylint",
		"python.linting.enabled": true
	},

	// Uncomment the next line if you want to publish any ports.
	// "appPort": [],

	// Uncomment the next line to run commands after the container is created - for example installing git.
	"postCreateCommand": "sudo chown -R dev: /workspaces/elliott-working-dir && pip install --user -r requirements-dev.txt -e .",

	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"ms-python.python"
	]
}
